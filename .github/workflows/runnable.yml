name: Runnable

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
        package-type:
          - type: "ai"
            name: "qiniu-models"
            keep_models: true
            keep_tools: false
          - type: "kodo"
            name: "qiniu-tools"
            keep_models: false
            keep_tools: true
          - type: "all"
            name: "qiniu"
            keep_models: true
            keep_tools: true

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install yq for YAML processing
      run: |
        sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        sudo chmod +x /usr/local/bin/yq

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Prepare test environment for ${{ matrix.package-type.type }} package
      run: |
        # 创建测试目录
        mkdir -p /tmp/test-plugin
        # 复制文件，排除不需要的目录
        rsync -av --exclude='.git' --exclude='.github' --exclude='build.sh' --exclude='__pycache__' . /tmp/test-plugin/
        
        cd /tmp/test-plugin
        
        # 更新 manifest.yaml
        yq eval '.name = "${{ matrix.package-type.name }}"' -i manifest.yaml
        
        # 根据类型删除不需要的文件和配置
        if [ "${{ matrix.package-type.keep_models }}" = "false" ]; then
          echo "🗑️  删除模型相关文件..."
          rm -rf models/
          rm -f provider/qiniu_ai.py provider/qiniu_ai.yaml
          yq eval 'del(.plugins.models)' -i manifest.yaml
          yq eval '.resource.permission = {"tool": {"enabled": true}}' -i manifest.yaml
        fi
        
        if [ "${{ matrix.package-type.keep_tools }}" = "false" ]; then
          echo "🗑️  删除工具相关文件..."
          rm -rf tools/
          rm -f provider/qiniu_tools.py provider/qiniu_tools.yaml
          yq eval 'del(.plugins.tools)' -i manifest.yaml
          yq eval '.resource.permission = {"model": {"llm": true, "rerank": false, "enabled": true, "moderation": false, "speech2text": false, "text_embedding": false, "tts": false}}' -i manifest.yaml
        fi
        
        # 清理空的 provider 目录
        if [ -d provider ] && [ -z "$(ls -A provider)" ]; then
          rm -rf provider/
        fi
        
        # 清理 __pycache__ 文件
        find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
        find . -name "*.pyc" -delete 2>/dev/null || true

    - name: Test ${{ matrix.package-type.type }} package runs without errors
      run: |
        cd /tmp/test-plugin
        echo "🧪 Testing ${{ matrix.package-type.name }} package..."
        timeout 10s python -m main || [ $? -eq 124 ]
        echo "✅ ${{ matrix.package-type.name }} package runs successfully"
